name: Java Test Automation Framework for CI with Maven

on:
  # Trigger this workflow on pull requests
  pull_request:
    branches:
      - main  # Replace with your main branch name if different
  # Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest  # Change to Ubuntu

    steps:
    # Step 1: Checkout the latest code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JDK 23 (or whichever version you need)
    - name: Set up JDK 23
      uses: actions/setup-java@v3
      with:
         distribution: 'temurin'
         java-version: '23'

    # Step 3: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Specify the Node.js version you need

    # Step 4: Cache Maven dependencies to speed up the build
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Step 5: Install project dependencies and build the project
    - name: Build with Maven
      run: mvn -f TestAutomation/TestAutomationFramework/pom.xml clean install -DskipTests 

    # Step 6: Set up and start the client and server
    - name: Start Client and Server
      run: |
        npm run setup
        npm run start &
        echo "Server and client starting..."

    # Step 7: Wait for Server to be Ready
    - name: Wait for Server to be Ready
      shell: cmd
      run: |
        set count=0
        :wait_loop
        curl --silent --fail http://localhost:8080
        if %errorlevel%==0 (
          echo Server is up!
        ) else (
          set /a count+=1
          if %count% geq 60 (
            echo Server did not start in time.
            exit /b 1
          )
          echo Waiting for server... attempt %count%
          timeout /t 5 >nul
          goto wait_loop
        )

    # Step 8: Run the tests
    - name: Run Selenium tests
      run: mvn -f TestAutomation/TestAutomationFramework/pom.xml test
